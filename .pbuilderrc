# /usr/share/pbuilder/pbuilderrc

# Codenames for Debian suites according to their alias. Update these when
# needed.
UNSTABLE_CODENAME="$(debian-distro-info --devel)"
TESTING_CODENAME="$(debian-distro-info --testing)"
STABLE_CODENAME="$(debian-distro-info --stable)"
STABLE_BACKPORTS_SUITE="$STABLE_CODENAME-backports"

# List of Debian suites.
DEBIAN_SUITES="$(debian-distro-info --supported) \
    stable testing unstable \
    $(debian-distro-info --stable)-backports"

# List of Ubuntu suites. Update these when needed.
UBUNTU_SUITES="$(ubuntu-distro-info --supported)"

# Mirrors to use. Update these to your preferred mirror.
DEBIAN_MIRROR="ftp.nl.debian.org"
# http://mirrors.ubuntu.com/mirrors.txt
UBUNTU_MIRROR="nl.archive.ubuntu.com"
UBUNTU_MIRROR="mirrors.nl.eu.kernel.org"

# Optionally use the changelog of a package to determine the suite to use if
# none set.
if [ -z "${DIST}" ] && [ -r "debian/changelog" ]; then
    DIST=$(dpkg-parsechangelog | awk '/^Distribution: / {print $2}')
    # Use the unstable suite for certain suite values.
    if $(echo "experimental UNRELEASED" | grep -q $DIST); then
        DIST="$UNSTABLE_CODENAME"
    fi
    # Use the stable suite for stable-backports.
    if $(echo "$STABLE_BACKPORTS_SUITE" | grep -q $DIST); then
        DIST="$STABLE_CODENAME"
    fi
fi

# Optionally set a default distribution if none is used. Note that you can set
# your own default (i.e. ${DIST:="unstable"}).
: ${DIST:="$(lsb_release --short --codename)"}

# Optionally change Debian release states in $DIST to their names.
case "$DIST" in
    unstable)
        DIST="$UNSTABLE_CODENAME"
        ;;
    testing)
        DIST="$TESTING_CODENAME"
        ;;
    stable)
        DIST="$STABLE_CODENAME"
        ;;
esac

# Optionally set the architecture to the host architecture if none set. Note
# that you can set your own default (i.e. ${ARCH:="i386"}).
: ${ARCH:="$(dpkg --print-architecture)"}

# ccache
# sudo mkdir -p /var/cache/pbuilder/ccache
# sudo chmod a+w /var/cache/pbuilder/ccache
export CCACHE_DIR="/var/cache/pbuilder/ccache"
export PATH="/usr/lib/ccache:${PATH}"

# install build-essential packages on create/update
DEBOOTSTRAPOPTS="--variant=buildd"

# Use a better dependency resolutio mechanism
PBUILDERSATISFYDEPENDSCMD="/usr/lib/pbuilder/pbuilder-satisfydepends-experimental"

# Install extra packages
# SET EXTRAPACKAGES TO " " to disable it
: ${EXTRAPACKAGES:="ccache"}

NAME="$DIST"
if [ -n "${ARCH}" ]; then
    NAME="$NAME-$ARCH"
    DEBOOTSTRAPOPTS="--arch \"${ARCH}\" \"${DEBOOTSTRAPOPTS[@]}\""
fi

BASETGZ="/var/cache/pbuilder/$NAME-base.tgz"
# Optionally, set BASEPATH (and not BASETGZ) if using cowbuilder
# BASEPATH="/var/cache/pbuilder/$NAME/base.cow/"
DISTRIBUTION="$DIST"
BUILDRESULT="/var/cache/pbuilder/$NAME/result/"
APTCACHE="/var/cache/pbuilder/$NAME/aptcache/"
BUILDPLACE="/var/cache/pbuilder/build"
AUTO_DEBSIGN="no"

# set DEBBUILDOPTS
: ${DEBBUILDOPTS:="$DEBBUILDOPTS"}
DEBBUILDOPTS="$DEBBUILDOPTS $DEBBUILDOPTS_EXTRA"

# See /usr/share/doc/pbuilder/examples
HOOKDIR="$HOME/.pbuilder-hooks"

# If $APTCACHE doesn't exist: create it
if [ ! -d "$APTCACHE" ]; then
    mkdir -p "$APTCACHE"
fi

# BINDMOUNTS is a space separated list of things to mount
# inside the chroot.
BINDMOUNTS="/var/cache/archive"
BINDMOUNTS="${BINDMOUNTS} ${CCACHE_DIR}"

if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
    # Debian configuration
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
    COMPONENTS="main contrib non-free"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/debian-archive-keyring.gpg")
    OTHERMIRROR="deb file:///var/cache/archive $DIST/"

elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
    COMPONENTS="main restricted universe multiverse"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--keyring=/usr/share/keyrings/ubuntu-archive-keyring.gpg")
    OTHERMIRROR="deb file:///var/cache/archive $DIST/"
    OTHERMIRROR="${OTHERMIRROR}|http://ppa.launchpad.net/leonbo/servers/ubuntu trusty main"

else
    echo "Unknown distribution: $DIST"
    exit 1
fi

# Check if the local mirror exists, if not: unset it
if [ ! -f "/var/cache/archive/${DIST}/Packages.gz" ]; then
    OTHERMIRROR=""
fi
